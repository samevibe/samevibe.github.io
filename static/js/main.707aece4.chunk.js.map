{"version":3,"sources":["App.tsx","module/auth/session.tsx","form/auth.tsx","Login.tsx","Error.tsx","module/RoutePrivate.tsx","redux/reducers/auth.js","redux/reducers/index.js","redux/storeConfig.tsx","module/auth/ya/verification.tsx","index.tsx"],"names":["App","_","session","apiSettings","tokenKey","cookieKey","tokenString","authorized","this","getTokenString","isTokenValid","publicKey","removeToken","localToken","localStorage","getItem","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","jwt","verify","algorithms","e","removeItem","url","require","AuthForm","p","className","src","onClick","requestUrl","parse","format","protocol","hostname","pathname","query","response_type","client_id","ya","clientID","redirect_uri","callbackURL","window","open","href","alt","Login","console","log","s","React","useState","isAuthorized","Error","PrivateRoute","children","appSettings","rest","render","to","basePath","initialState","payload","state","action","type","createRootReducer","history","combineReducers","router","connectRouter","auth","createBrowserHistory","AuthVerification","appState","setAppState","info","setInfo","useEffect","code","URLSearchParams","location","search","get","form_data","FormData","append","clientSecret","axios","post","then","response","data","error","error_description","access_token","catch","toString","c","a","params","headers","resp","err","z","process","REACT_APP_GH_APP_CLIENT_ID","REACT_APP_GH_APP_CALLBACK","r","preloadedState","store","createStore","compose","applyMiddleware","routerMiddleware","REACT_APP_BASE_PATH","REACT_APP_TOKEN_KEY","REACT_APP_COOKIE_KEY","REACT_APP_PUBLIC_KEY","api","REACT_APP_API_PATH","domain","REACT_APP_CURRENT_DOMAIN","REACT_APP_YA_CID","REACT_APP_YA_CIS","REACT_APP_YA_CURI","ReactDOM","exact","path","StrictMode","RoutePrivate","component","getElementById"],"mappings":"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","file":"static/js/main.707aece4.chunk.js","sourcesContent":["import React from 'react';\nimport backendSettings from \"./module/settings/backend\";\n\nconst App = (_ :backendSettings) => {\n\n    return <h1>authorized</h1>\n}\n\nexport default App","// @ts-ignore\nimport jwt from 'jsonwebtoken';\nimport backendSettings from \"../settings/backend\";\n\nclass session {\n    private readonly tokenKey: string\n    private readonly cookieKey: string\n    private readonly tokenString: string | undefined\n    private readonly authorized: boolean = false\n\n    constructor(apiSettings :backendSettings) {\n        this.tokenKey = apiSettings.tokenKey\n        this.cookieKey = apiSettings.cookieKey\n        this.tokenString = this.getTokenString()\n        if (this.tokenString && (this.isTokenValid(apiSettings.publicKey))) {\n             this.authorized = true\n        } else {\n            this.removeToken()\n        }\n    }\n\n    private getTokenString(): string | undefined {\n        if(!this.tokenKey || !this.cookieKey) return undefined\n\n        if (this.tokenString) return this.tokenString\n\n        let localToken: string | null | undefined = localStorage.getItem(this.tokenKey)\n        if (localToken) return localToken\n\n        let matches = document.cookie.match(new RegExp(\n            // eslint-disable-next-line\n            \"(?:^|; )\" + this.cookieKey.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n\n        localToken = matches ? decodeURIComponent(matches[1]) : undefined;\n\n        if (localToken) return localToken\n\n        return undefined\n    }\n\n    private isTokenValid(publicKey :string): boolean {\n        if (!this.tokenString) return false\n\n        try {\n            jwt.verify(this.tokenString, publicKey, {algorithms: ['RS256']})\n            return true\n        } catch (e) {\n            return false\n        }\n    }\n\n    private removeToken(): void {\n        localStorage.removeItem(this.tokenKey);\n    }\n\n    public isAuthorized() :boolean {\n        return this.authorized\n    }\n}\n\n// private getRequestHeader () {\n//     let token = this.getToken()\n//     token = (token === undefined) ? null : token;\n//     if (token === null) {\n//         return {}\n//     }\n//\n//     return {\n//         'Authorization': `Bearer ${token}`\n//     }\n// }\n\nexport default session","import React from 'react';\nimport '../css/login.scss';\nimport backendSettings from \"../module/settings/backend\";\n\nconst url = require('url');\n\nfunction AuthForm (p :backendSettings) {\n\n    const signInYa = () => {\n        const requestUrl = url.parse(url.format({\n            protocol: 'https',\n            hostname: 'oauth.yandex.ru',\n            pathname: '/authorize',\n            query: {\n                response_type: 'code',\n                client_id: p.ya.clientID,\n                redirect_uri: p.ya.callbackURL\n            },\n        }));\n\n        window.open(requestUrl.href, \"_self\");\n    }\n\n    return (\n        <form className=\"login\">\n            <img src=\"/img/ya-auth.svg\" onClick={signInYa} alt=\"авторизация через яндекс аккаунт\"/>\n        </form>\n    )\n}\n\nexport default AuthForm","import React from 'react';\nimport session from './module/auth/session';\nimport backendSettings from \"./module/settings/backend\";\nimport AuthForm from \"./form/auth\";\n\nconst Login = (apiSettings :backendSettings) => {\n\n    console.log(apiSettings.ya)\n    \n    const s :session = new session(apiSettings)\n    const [authorized] = React.useState(s.isAuthorized());\n\n    if (!authorized) {\n        return (\n                <AuthForm {...apiSettings}/>\n        )\n    }\n\n    return <h1>authorized</h1>\n}\n\nexport default Login","import React from 'react';\nimport './css/error.scss';\n\n\nfunction Error () {\n    return (\n        <div>\n            <h1>404 Not Found</h1>\n            <a href={\"/\"}>go back to main page</a>\n        </div>\n    )\n}\n\nexport default Error","import * as React from \"react\"\nimport settings from \"./settings/app\"\nimport { Route, Redirect } from 'react-router'\n\nfunction PrivateRoute({ children, appSettings, ...rest } :{children: JSX.Element; appSettings: settings; [rest: string]: any;}): JSX.Element {\n    return (\n        <Route {...rest} render={() => {\n            return <Redirect to={appSettings?.basePath + '/login'} />\n        }} />\n    )\n}\n\nexport default PrivateRoute","// import { AUTHORIZE, LOGOUT, CHANGE_AUTH_FORM } from \"../actionTypes\";\n// import ServerRequest from \"../../components/ServerRequest\";\n// const jwt = require('jsonwebtoken');\n// const publicKey = `${process.env.REACT_APP_PUBLIC_KEY}`\n//\n// const logout = () => {\n//     const req = ServerRequest.post(\n//       `/auth/logout`,\n//       {}\n//       )\n//\n//     ServerRequest.removeToken()\n//\n//     return req\n// }\n//\n// let token = ServerRequest.getToken()\n// token = (token === undefined) ? null : token;\n// let authorized = false\n// let payload = {}\n//\n// if(token !== undefined && token !== null) {\n//     try {\n//         const {role} = jwt.verify(token, publicKey, { algorithms: ['RS256'] })\n//         authorized = true\n//         payload = {role}\n//     } catch (e) {\n//         console.error(`failed to authorize`,e)\n//         payload = {}\n//         authorized = false\n//     }\n// }\n//\n\nlet payload = {}\nlet authorized = false\n\nlet initialState = {\n    authorized,\n    payload\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case 'AUTHORIZE': {\n            return {\n                ...state,\n                authorized\n            };\n        }\n        case 'LOGOUT': {\n            return {\n                ...state,\n                authorized,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router'\nimport auth from \"./auth\";\n\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    auth\n})\n\nexport default createRootReducer","import {createBrowserHistory} from 'history'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {routerMiddleware} from 'connected-react-router'\nimport createRootReducer from './reducers'\n\nexport const history = createBrowserHistory()\n\nexport default function configureStore(preloadedState :Object) {\n    return createStore(\n        createRootReducer(history), // root reducer with router state\n        preloadedState,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                // ... other middlewares ...\n            ),\n        ),\n    )\n}","import backendSettings from \"../../settings/backend\";\nimport axios from 'axios';\n\nimport {useEffect, useState} from \"react\";\n\nfunction AuthVerification (p :backendSettings) {\n    const [appState, setAppState] = useState();\n    const [info, setInfo] = useState('');\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(window.location.search)\n        const code = queryParams.get(\"code\") + ''\n\n        let form_data = new FormData();\n        form_data.append( 'grant_type', 'authorization_code' );\n        form_data.append( 'code', code );\n        form_data.append( 'client_id', p.ya.clientID );\n        form_data.append( 'client_secret', p.ya.clientSecret );\n\n        axios.post('https://oauth.yandex.ru/token', form_data)\n        .then(function (response) {\n            if (response.data?.error !== undefined) {\n                throw (response.data?.error_description)\n            }\n            console.log(response.data?.access_token)\n            setAppState(response.data)\n            setInfo(response.data.access_token)\n        }).catch(function (error) {\n            setInfo(error.toString())\n        });\n\n        }, [setAppState,p.ya.clientID, p.ya.clientSecret]);\n\n    console.log(appState)\n\n    return (<h1>{info}</h1>);\n}\n\nexport default AuthVerification","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Login from './Login'\nimport Error from './Error'\nimport './css/index.scss'\nimport backendSettings from \"./module/settings/backend\"\nimport settings from \"./module/settings/app\"\n\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router'\nimport { ConnectedRouter } from 'connected-react-router'\nimport RoutePrivate from './module/RoutePrivate'\nimport configureStore, { history } from './redux/storeConfig'\n\nimport axios from \"axios\";\nimport credentials from \"./module/auth/github/credentials\";\nimport AuthVerification from \"./module/auth/ya/verification\";\n\ntype answer = {\n    error: number,\n    data: object | null\n}\n\nconst auth = async (c: credentials): Promise<answer> => {\n    return await axios.get(\n        `https://github.com/login/oauth/authorize`,\n        {\n            params: c,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n        }\n    ).then((resp) => {\n        return {\n            error: 0,\n            data: resp.data\n        }\n    }).catch((err) => {\n        console.error(err)\n\n        return {\n            error: 1,\n            data: null\n        }\n    })\n}\n\nconst z: credentials = {\n    client_id: process.env.REACT_APP_GH_APP_CLIENT_ID ? `${process.env.REACT_APP_GH_APP_CLIENT_ID}` : '',\n    redirect_uri: process.env.REACT_APP_GH_APP_CALLBACK ? `${process.env.REACT_APP_GH_APP_CALLBACK}` : '',\n}\n\nif (z?.client_id !== '') {\n    auth(z).then(r => {\n        console.log(r)\n    }).catch(e => {\n        console.log(e)\n    })\n}\n\nconst store = configureStore({})\n\nconst appSettings :settings = {\n    basePath: process.env.REACT_APP_BASE_PATH ? `${process.env.REACT_APP_BASE_PATH}` : '',\n}\n\nconst apiSettings :backendSettings = {\n    tokenKey: process.env.REACT_APP_TOKEN_KEY ? `${process.env.REACT_APP_TOKEN_KEY}` : '',\n    cookieKey: process.env.REACT_APP_COOKIE_KEY ? `${process.env.REACT_APP_COOKIE_KEY}` : '',\n    publicKey: process.env.REACT_APP_PUBLIC_KEY ? `${process.env.REACT_APP_PUBLIC_KEY}` : '',\n    api: {\n        basePath: process.env.REACT_APP_API_PATH ? `${process.env.REACT_APP_API_PATH}` : '',\n        domain: process.env.REACT_APP_CURRENT_DOMAIN ? `${process.env.REACT_APP_CURRENT_DOMAIN}` : ''\n    },\n    ya: {\n        clientID: process.env.REACT_APP_YA_CID ? `${process.env.REACT_APP_YA_CID}` : '',\n        clientSecret: process.env.REACT_APP_YA_CIS ? `${process.env.REACT_APP_YA_CIS}` : '',\n        callbackURL: process.env.REACT_APP_YA_CURI ? `${process.env.REACT_APP_YA_CURI}` : '',\n    }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <>\n                <Switch>\n                    <Route exact path={appSettings?.basePath + \"/verification/ya\"}>\n                        <React.StrictMode>\n                            <AuthVerification {...apiSettings} />\n                        </React.StrictMode>\n                    </Route>\n                    <Route exact path={appSettings?.basePath + \"/login\"}>\n                        <React.StrictMode>\n                            <Login {...apiSettings} />\n                        </React.StrictMode>\n                    </Route>\n                    <RoutePrivate exact path={appSettings?.basePath} appSettings={appSettings}>\n                        <React.StrictMode>\n                            <App {...apiSettings} />\n                        </React.StrictMode>\n                    </RoutePrivate>\n                    <Route component={Error} />\n                </Switch>\n            </>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}